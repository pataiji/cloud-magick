---
AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: 'CloudMagick stack template'
Resources:
  CloudMagickApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "${AWS::StackName}-CloudMagickApi"
      StageName: prod
      DefinitionBody:
        swagger: 2.0
        info:
          title: CloudMagickApi
        basePath: /prod
        schemes:
          - https
        paths:
          /{parameter}/{filename+}:
            get:
              produces:
                - application/json
              parameters:
                - name: filename
                  in: path
                  required: true
                  type: string
                - name: parameter
                  in: path
                  required: true
                  type: string
              responses:
                '200':
                  description: '200 response'
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
                  schema:
                    $ref: '#/definitions/Empty'
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: 200
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CloudMagickFunction.Arn}/invocations"
                passthroughBehavior: when_no_match
                httpMethod: POST
                contentHandling: CONVERT_TO_TEXT
                type: aws_proxy
            options:
              consumes:
                - application/json
              produces:
                - application/json
              responses:
                '200':
                  headers:
                    Access-Control-Allow-Headers:
                      type: string
                    Access-Control-Allow-Methods:
                      type: string
                    Access-Control-Allow-Origin:
                      type: string
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: 200
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                requestTemplates:
                  application/json: "{\"statusCode\" : 200}\n"
                passthroughBehavior: when_no_match
                type: mock
        definitions:
          Empty:
            type: object
            title: Empty Schema
        x-amazon-apigateway-gateway-responses:
          DEFAULT_4XX:
            statusCode: 404
            responseTemplates:
              text/html: "<html><head></head><body></body></html>"
          DEFAULT_5XX:
            statusCode: 500
            responseTemplates:
              text/html: "<html><head></head><body></body></html>"
        x-amazon-apigateway-binary-media-types:
          - image/*

  CloudMagickFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs8.10
      CodeUri: ./functions/built
      MemorySize: 512
      Timeout: 30
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
              Resource: !Sub "arn:aws:s3:::${BucketName}/*"
      Environment:
        Variables:
          BUCKET_NAME: !Ref BucketName
          ORIGIN_PREFIX: !Ref OriginPrefix
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{parameter}/{filename+}
            Method: get
            RestApiId: !Ref CloudMagickApi
      Tracing: Active

  CloudMagickDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases: !If
          - HasCustomDomainName
          -
            - !Ref CustomDomainName
          - !Ref AWS::NoValue
        DefaultCacheBehavior:
          DefaultTTL: !Ref MinTTL
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          MinTTL: !Ref MinTTL
          MaxTTL: !Ref MaxTTL
          ViewerProtocolPolicy: allow-all
          TargetOriginId: CloudMagickApi
        Enabled: true
        HttpVersion: http2
        Logging: !If
          - LogEnabled
          - Bucket: !Sub "${LogBucketName}.s3.amazonaws.com"
            Prefix: !Ref LogPrefix
          - !Ref AWS::NoValue
        Origins:
          - CustomOriginConfig:
              OriginProtocolPolicy: https-only
            DomainName: !Sub "${CloudMagickApi}.execute-api.${AWS::Region}.amazonaws.com"
            Id: CloudMagickApi
            OriginCustomHeaders:
              - HeaderName: Accept
                HeaderValue: image/jpeg,image/png,image/gif
              - HeaderName: Content-Type
                HeaderValue: image/jpeg,image/png,image/gif
            OriginPath: /prod
        PriceClass: !Ref PriceClass
        ViewerCertificate: !If
          - HasCustomDomainName
          - AcmCertificateArn: !Ref AcmCertificateArn
            SslSupportMethod: sni-only
          - !Ref AWS::NoValue

Conditions:
  HasCustomDomainName: !Not [!Equals [!Ref CustomDomainName, '']]
  LogEnabled: !Not [!Equals [!Ref LogBucketName, '']]

Parameters:
  BucketName:
    Type: String
    Default: cloud-magick-cloudmagicks3bucket-8e6gw7t85j5h
    Description: S3 bucket name to upload original images
  OriginPrefix:
    Type: String
    Default: ''
    Description: (Optional) S3 path prefix to upload original images
  CustomDomainName:
    Type: String
    Default: ''
    Description: (Optional) Custom domain name to access CloudMagick
  AcmCertificateArn:
    Type: String
    Default: ''
    Description: |
      (Optional) ACM certificate arn for Custom domain name
      You can specify only certificates that are in the US East (N. Virginia) region
  LogBucketName:
    Type: String
    Default: ''
    Description: (Optional) S3 bucket name to store the access logs
  LogPrefix:
    Type: String
    Default: ''
    Description: (Optional) S3 path prefix to store the access logs
  PriceClass:
    Type: String
    Default: PriceClass_200
    AllowedValues: ['PriceClass_100', 'PriceClass_200', 'PriceClass_All']
    Description: |
      Price class for CloudFront Distribution
      see also http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html
  MinTTL:
    Type: Number
    Default: 315360000 # 10 year
    Description: Default is 10 years
  MaxTTL:
    Type: Number
    Default: 315360000 # 10 year
    Description: Default is 10 years

Outputs:
  CloudMagickDomain:
    Description: Domain name to access CloudMagick
    Value: !GetAtt CloudMagickDistribution.DomainName
  S3OriginPath:
    Description: S3 path to upload original images
    Value: !Sub "s3://${BucketName}/${OriginPrefix}"
  S3LogPath:
    Description: S3 path to store the access logs
    Value: !If
      - LogEnabled
      - !Sub "s3://${LogBucketName}/${LogPrefix}"
      - Logging disabled
